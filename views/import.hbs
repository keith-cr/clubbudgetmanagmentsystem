<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
  <h1 class="h3 mb-0 text-gray-800">Import Budget</h1>
</div>
{{#each successes}}
  <div class="alert alert-success" role="alert">
    {{this}}
  </div>
{{/each}}
{{#each errors}}
  <div class="alert alert-danger" role="alert">
    {{this}}
  </div>
{{/each}}
<form>
  <div class="form-group">
    <label for="clubSelect">Club</label>
    <select class="form-control" id="clubSelect">
      {{#each clubs}}
        <option value={{ID}}>{{Name}}</option>
      {{/each}}
    </select>
  </div>
  <input type="file" name="xlfile" id="xlf">
  <button type="submit" class="btn btn-primary" id="submit">Submit</button>
</form>
<script lang="javascript" src="/js/xlsx.full.min.js"></script>
<script>
var year;
function Category(number, name) {
  this.number = number;
  this.name = name;
}

var categories = [];

function LineItem(number, name, desc, originalBal) {
  this.number = number;
  this.name = name;
  this.desc = desc;
  this.originalBal = originalBal;
}

var lineItems = [];

function handleFile(e) {
  var files = e.target.files, f = files[0];
  var reader = new FileReader();
  reader.onload = function(e) {

    var data = new Uint8Array(e.target.result);
    var workbook = XLSX.read(data, {type: 'array'});

    var first_sheet_name = workbook.SheetNames[0];
    var address_of_cell = 'A3';
    var worksheet = workbook.Sheets[first_sheet_name];
    var desired_cell = worksheet[address_of_cell];
    var fiscalyear = (desired_cell ? desired_cell.v : undefined);

    var numBlanks = 0;

    for(var R = 3; R <= 1000; ++R) {
      var firstCell = worksheet[XLSX.utils.encode_cell({c:0, r:R})];

      if (firstCell == null || firstCell.v === "") {
        // blank
        numBlanks++;
      } else if (Number.isInteger(firstCell.v)) {
        // category
        numBlanks = 0;
        var catName = worksheet[XLSX.utils.encode_cell({c:1, r:R})].v;
        categories.push(new Category(firstCell.v, catName));
      } else if (!isNaN(firstCell.v)) {
        // line item
        numBlanks = 0;
        var name = worksheet[XLSX.utils.encode_cell({c:1, r:R})].v;
        var desc = worksheet[XLSX.utils.encode_cell({c:7, r:R})].v;
        var originalBal = worksheet[XLSX.utils.encode_cell({c:5, r:R})].v;
        console.log(firstCell.v);
        lineItems.push(new LineItem(firstCell.v, name, desc, originalBal));
      } else {
        // other
        numBlanks = 0;
      }

      if (numBlanks > 3) {
        // if we have more than 3 blank lines, assume we've reached end of spreadsheet
        break;
      }
    }


    const regex = /\d+/;
    year = fiscalyear.match(regex)[0];
  };
  reader.readAsArrayBuffer(f);
}

function submit(e) {
  var club_select_dom_element = document.getElementById('clubSelect');
  e.preventDefault();
  $.ajax({
    type: 'POST',
    url: '/import',
    data: { year: year, clubid: club_select_dom_element.value, lineItems: JSON.stringify(lineItems), categories: JSON.stringify(categories) },
    success: function() {
      window.location.reload();
    },
    failure: function() {
      window.location.reload();
    },
  });
}

var input_dom_element = document.getElementById('xlf');
input_dom_element.addEventListener('change', handleFile, false);
var submit_dom_element = document.getElementById('submit');
submit_dom_element.addEventListener('click', submit);
</script>
